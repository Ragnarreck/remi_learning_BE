### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AffectedRowsOutput {
  count: Int!
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

type Mutation {
  bigRedButton: String
  createOneUser(data: UserCreateInput!): User!
  deleteManyUser(where: UserWhereInput): AffectedRowsOutput!
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): AffectedRowsOutput!
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  getAllUsers: [User]
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

enum QueryMode {
  default
  insensitive
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input TaskCreateManyAuthorInput {
  content: String
  createdAt: DateTime
  finished: Boolean
  id: String
  title: String!
}

input TaskCreateManyAuthorInputEnvelope {
  data: [TaskCreateManyAuthorInput!]
  skipDuplicates: Boolean
}

input TaskCreateNestedManyWithoutAuthorInput {
  connect: [TaskWhereUniqueInput!]
  connectOrCreate: [TaskCreateOrConnectWithoutAuthorInput!]
  create: [TaskCreateWithoutAuthorInput!]
  createMany: TaskCreateManyAuthorInputEnvelope
}

input TaskCreateOrConnectWithoutAuthorInput {
  create: TaskCreateWithoutAuthorInput!
  where: TaskWhereUniqueInput!
}

input TaskCreateWithoutAuthorInput {
  content: String
  createdAt: DateTime
  finished: Boolean
  id: String
  title: String!
}

input TaskListRelationFilter {
  every: TaskWhereInput
  none: TaskWhereInput
  some: TaskWhereInput
}

input TaskScalarWhereInput {
  AND: [TaskScalarWhereInput!]
  NOT: [TaskScalarWhereInput!]
  OR: [TaskScalarWhereInput!]
  authorId: StringNullableFilter
  content: StringNullableFilter
  createdAt: DateTimeFilter
  finished: BoolFilter
  id: StringFilter
  title: StringFilter
}

input TaskUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  finished: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input TaskUpdateManyWithWhereWithoutAuthorInput {
  data: TaskUpdateManyMutationInput!
  where: TaskScalarWhereInput!
}

input TaskUpdateManyWithoutAuthorInput {
  connect: [TaskWhereUniqueInput!]
  connectOrCreate: [TaskCreateOrConnectWithoutAuthorInput!]
  create: [TaskCreateWithoutAuthorInput!]
  createMany: TaskCreateManyAuthorInputEnvelope
  delete: [TaskWhereUniqueInput!]
  deleteMany: [TaskScalarWhereInput!]
  disconnect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [TaskUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutAuthorInput!]
}

input TaskUpdateWithWhereUniqueWithoutAuthorInput {
  data: TaskUpdateWithoutAuthorInput!
  where: TaskWhereUniqueInput!
}

input TaskUpdateWithoutAuthorInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  finished: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input TaskUpsertWithWhereUniqueWithoutAuthorInput {
  create: TaskCreateWithoutAuthorInput!
  update: TaskUpdateWithoutAuthorInput!
  where: TaskWhereUniqueInput!
}

input TaskWhereInput {
  AND: [TaskWhereInput!]
  NOT: [TaskWhereInput!]
  OR: [TaskWhereInput!]
  author: UserWhereInput
  authorId: StringNullableFilter
  content: StringNullableFilter
  createdAt: DateTimeFilter
  finished: BoolFilter
  id: StringFilter
  title: StringFilter
}

input TaskWhereUniqueInput {
  id: String
}

type User {
  email: String!
  id: String!
  name: String
}

input UserCreateInput {
  email: String!
  id: String
  name: String
  tasks: TaskCreateNestedManyWithoutAuthorInput
}

input UserUpdateInput {
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  tasks: TaskUpdateManyWithoutAuthorInput
}

input UserUpdateManyMutationInput {
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  email: StringFilter
  id: StringFilter
  name: StringNullableFilter
  tasks: TaskListRelationFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}